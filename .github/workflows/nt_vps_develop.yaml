name: NovaTix VPS Develop

on:
  push:
    branches:
      - develop

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - name: 🛠 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: 📦 Install Frontend Dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install --legacy-peer-deps

      - name: 🏗 Build Frontend (Vite)
        run: npm run build

  test-laravel:
    runs-on: ubuntu-latest
    needs: test-build
    steps:
      - name: 🛠 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, bcmath, xml, pdo_mysql
          tools: composer, phpunit

      - name: 📦 Install Backend Dependencies
        run: composer install --optimize-autoloader --no-interaction

      - name: 🛠 Set Up Laravel Environment
        run: |
          cp .env.staging .env
          php artisan key:generate

      - name: Install Node.js dependencies
        run: npm ci

      - name: Build frontend assets with Vite
        run: npm run build

      - name: Start Laravel built-in server
        run: php artisan serve --host=127.0.0.1 --port=8000 &

      - name: 🛠 Run Laravel Tests
        run: php artisan test

  vps-sync:
    runs-on: ubuntu-latest
    needs: test-laravel

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/av_rsa
          chmod 600 ~/.ssh/av_rsa
          ssh-keyscan -H "${{ secrets.VPS_HOST }}" >> ~/.ssh/known_hosts

      - name: Ensure Folder Structure & Create Scripts
        run: |
          ssh -i ~/.ssh/av_rsa -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} 'bash -s' << 'EOF'
          set -e

          echo "Ensuring folder structure..."
          mkdir -p ~/novatix/app/develop ~/novatix/setups

          # Ensure update_repo.sh exists
          echo "Creating update_repo.sh..."
          cat > ~/novatix/setups/update_repo.sh << 'EOT'
          #!/bin/bash
          mkdir -p ~/novatix/app/develop
          cd ~/novatix

          if [ ! -d "app/develop/.git" ]; then
              echo "Repository not found. Checking existing directory..."
              if [ -n "$(ls -A app 2>/dev/null)" ]; then
                  echo "Existing directory found but not a Git repository. Removing everything..."
                  rm -rf app/develop
              fi
              echo "Cloning repository..."
              git clone --branch develop git@github.com:ArachnoVa-id/novatix.git app/develop
          else
              echo "Repository found. Pulling latest changes..."
              cd app/develop

              git reset --hard HEAD
              git clean -fd

              # Enable pulling by marking as safe
              git config --global --add safe.directory ~/novatix/app/develop

              git pull origin develop --force
          fi

          EOT
          chmod +x ~/novatix/setups/update_repo.sh

          # Ensure install_dependencies.sh exists
          echo "Creating install_dependencies.sh..."
          cat > ~/novatix/setups/install_dependencies.sh << 'EOT'
          #!/bin/bash
          cd ~/novatix/app/develop
          composer install --no-interaction --prefer-dist
          EOT
          chmod +x ~/novatix/setups/install_dependencies.sh

          # Ensure deploy_laravel.sh exists
          echo "Creating deploy_laravel.sh..."
          cat > ~/novatix/setups/deploy_laravel.sh << 'EOT'
          #!/bin/bash
          cd ~/novatix/app/develop
          php artisan migrate:fresh --force --seed
          php artisan config:clear
          php artisan cache:clear
          php artisan route:cache
          EOT
          chmod +x ~/novatix/setups/deploy_laravel.sh

          # Ensure restart_services.sh exists
          echo "Creating restart_services.sh..."
          cat > ~/novatix/setups/restart_services.sh << 'EOT'
          #!/bin/bash
          sudo systemctl restart php8.2-fpm
          EOT
          chmod +x ~/novatix/setups/restart_services.sh

          # Ensure generate_env.sh exists
          echo "Creating generate_env.sh..."
          cat > ~/novatix/setups/generate_env.sh << 'EOT'
          #!/bin/bash

          ENV_DIR="$HOME/novatix/app/develop"
          STAGING_ENV_FILE=".env.staging"
          TARGET_ENV_FILE=".env"

          echo "Checking if .env.staging exists..."
          if [ ! -f "$STAGING_ENV_FILE" ]; then
              echo "Error: .env.staging file not found!"
              exit 1
          fi

          echo "Backing up existing .env file (if exists)..."
          if [ -f "$TARGET_ENV_FILE" ]; then
              mv "$TARGET_ENV_FILE" "$TARGET_ENV_FILE.bak"
          fi

          echo "Copying .env.staging to .env..."
          cp "$STAGING_ENV_FILE" "$TARGET_ENV_FILE"

          chmod 660 "$TARGET_ENV_FILE"
          echo ".env file copied successfully from .env.staging."

          EOT

          chmod +x ~/novatix/setups/generate_env.sh

      - name: Update Repository on VPS
        run: ssh -i ~/.ssh/av_rsa -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "~/novatix/setups/update_repo.sh"

      - name: Generate .env on VPS
        run: ssh -i ~/.ssh/av_rsa -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "~/novatix/setups/generate_env.sh"

      - name: Install Dependencies on VPS
        run: ssh -i ~/.ssh/av_rsa -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "~/novatix/setups/install_dependencies.sh"

      - name: Deploy Laravel on VPS
        run: ssh -i ~/.ssh/av_rsa -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "~/novatix/setups/deploy_laravel.sh"

      - name: Restart Services on VPS
        run: ssh -i ~/.ssh/av_rsa -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "~/novatix/setups/restart_services.sh"

  update-staging:
    runs-on: ubuntu-latest
    needs: vps-sync

    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/av_rsa
          chmod 600 ~/.ssh/av_rsa
          ssh-keyscan -H "${{ secrets.VPS_HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy Laravel Project to VPS
        run: |
          ssh -i ~/.ssh/av_rsa -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} 'bash -s' << 'EOF'
          set -e  # Exit immediately if any command fails

          # Ensure project directory exists
          sudo mkdir -p ~/novatix/app/develop

          # Change permissions to allow www-data
          sudo chown -R www-data:www-data ~/novatix/app/develop

          # Remove old symlink if exists, then create a new one
          sudo rm -rf /var/www/novatix_staging
          sudo ln -s ~/novatix/app/develop /var/www/novatix_staging

          # Set proper ownership
          sudo chown -R www-data:www-data /var/www/novatix_staging

          # Move into project directory
          cd /var/www/novatix_staging

          # Install backend dependencies
          composer install --no-interaction --prefer-dist --optimize-autoloader

          # Install frontend dependencies
          npm install

          # Build frontend assets
          npm run build

          # Set correct permissions
          sudo chown -R www-data:www-data /var/www/novatix_staging
          sudo chmod -R 775 /var/www/novatix_staging/storage /var/www/novatix_staging/bootstrap/cache

          # Cache configurations
          php artisan config:clear
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

          EOF
